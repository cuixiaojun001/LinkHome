declare const geometry: import("vue/types/vue").ExtendedVue<{
    cursor: string;
    bubble: boolean;
    clickable: boolean;
    draggable: boolean;
    extData: any;
} & Record<never, any> & {
    $context: import("../types/amap-vue").ComponentContext<AMapComponent>;
    $container: import("../types/amap-vue").MapContext;
    $target: AMapComponent;
    $map: AMap.Map_2;
    $meta: import("../types/amap-vue").AMapMeta<AMapComponent>;
} & import("vue").default & {
    visible: boolean;
} & {
    zIndex: number;
}, unknown, unknown, unknown, {
    strokeColor: string;
    strokeOpacity: number;
    strokeWeight: number;
    strokeStyle: "solid" | "dashed";
    strokeDasharray: number[];
}>;
export default geometry;
export declare const plane: import("vue/types/vue").ExtendedVue<{
    strokeColor: string;
    strokeOpacity: number;
    strokeWeight: number;
    strokeStyle: "solid" | "dashed";
    strokeDasharray: number[];
} & {
    cursor: string;
    bubble: boolean;
    clickable: boolean;
    draggable: boolean;
    extData: any;
} & Record<never, any> & {
    $context: import("../types/amap-vue").ComponentContext<AMapComponent>;
    $container: import("../types/amap-vue").MapContext;
    $target: AMapComponent;
    $map: AMap.Map_2;
    $meta: import("../types/amap-vue").AMapMeta<AMapComponent>;
} & import("vue").default & {
    visible: boolean;
} & {
    zIndex: number;
}, unknown, unknown, unknown, {
    fillColor: string;
    fillOpacity: number;
}>;
export declare const line: import("vue/types/vue").ExtendedVue<{
    strokeColor: string;
    strokeOpacity: number;
    strokeWeight: number;
    strokeStyle: "solid" | "dashed";
    strokeDasharray: number[];
} & {
    cursor: string;
    bubble: boolean;
    clickable: boolean;
    draggable: boolean;
    extData: any;
} & Record<never, any> & {
    $context: import("../types/amap-vue").ComponentContext<AMapComponent>;
    $container: import("../types/amap-vue").MapContext;
    $target: AMapComponent;
    $map: AMap.Map_2;
    $meta: import("../types/amap-vue").AMapMeta<AMapComponent>;
} & import("vue").default & {
    visible: boolean;
} & {
    zIndex: number;
}, unknown, unknown, unknown, {
    lineJoin: "miter" | "round" | "bevel";
    lineCap: "round" | "butt" | "square";
    showDir: boolean;
    dirColor: string;
    dirImg: HTMLImageElement | HTMLCanvasElement;
    isOutline: boolean;
    outlineColor: string;
    borderWeight: number;
    geodesic: boolean;
}>;
