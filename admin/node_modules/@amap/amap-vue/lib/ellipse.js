"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("./_virtual/_tslib.js"),r=require("./load-plugins.js"),t=require("./mixins/mixins.js"),i=require("./utils/amap-helpers.js"),n=require("./mixins/props.js"),a=require("./mixins/geometry.js"),s=require("./mixins/editable.js"),u=t.default(a.plane,s.default).extend({name:"AmapEllipse",amapMeta:{initComponent:function(r,t){return e.__awaiter(this,void 0,void 0,(function(){return e.__generator(this,(function(e){return[2,new r.Ellipse(t)]}))}))},editable:{events:["move","end","adjust"],loadEditor:function(){return e.__awaiter(this,void 0,void 0,(function(){return e.__generator(this,(function(e){switch(e.label){case 0:return[4,r.default("AMap.EllipseEditor")];case 1:return e.sent(),[2]}}))}))},initEditor:function(r,t,i,n){return e.__awaiter(this,void 0,void 0,(function(){return e.__generator(this,(function(e){return[2,new r.EllipseEditor(t,i,n)]}))}))},onEdit:function(e){var r=i.lngLat2Array(e.target.getCenter());i.nearPair(this.center,r)||this.$emit("update:center",r);var t=e.target.getRadius();i.nearPair(this.radius,t)||this.$emit("update:radius",t.slice(0))}}},props:{center:n.defineProp({type:Array,setter:function(e,r){if(this.$props.editable||this.$props.draggable){var t=i.lngLat2Array(e.getCenter());if(i.nearPair(r,t))return}e.setCenter(r)},getter:function(e){return i.lngLat2Array(e.getCenter())},clone:!0,deep:!0,equals:i.nearPair,events:["dragging","dragend"]}),radius:n.defineProp({type:Array,setter:function(e,r){var t=e;if(this.$props.editable){var n=t.getRadius();if(i.nearPair(r,n))return}t.setRadius(r)},clone:!0,deep:!0,equals:i.nearPair})}});exports.default=u;
