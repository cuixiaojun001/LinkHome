import Vue from 'vue';
import { PropDesc } from '../types/props';
import { AMapTarget } from 'src/types/amap-vue';
export declare function theSame(a: any, b: any): boolean;
export declare function theSameArray<T>(a: T[], b: T[]): boolean;
export declare function theSamePair<T>(a: T[], b: T[]): boolean;
export declare function theSamePath(pa: number[][] | number[][][], pb: number[][] | number[][][]): boolean;
export declare const EPSILON = 1e-7;
export declare function near(a: number, b: number, d?: number): boolean;
export declare function nearPair(a: number[], b: number[]): boolean;
export declare function getOptionsFromProps(vm: Vue, propDefinitions?: Record<string, PropDesc<any>>, props?: Record<string, any>, bypass?: boolean): Record<string, any>;
export declare function lngLat2Array(p: Opt<number[] | [number, number] | AMap.LngLat>): number[];
export declare function xy2Array(p: any): number[];
export declare function bounds2Array(bounds: any): number[][];
export declare function path2Array(path: AMap.LngLat | AMap.LngLat[] | AMap.LngLat[][] | undefined): number[][] | number[][][];
export declare function makeBounds(value: number[][]): any;
declare type OptionsSetter<T extends AMapTarget> = (this: Vue, target: T, value: any) => void;
export declare function makeOptionsSetter<T extends AMapTarget = AMapTarget>(key: string): OptionsSetter<T>;
export {};
