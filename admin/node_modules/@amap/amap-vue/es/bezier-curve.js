import{__awaiter as t,__generator as e}from"./_virtual/_tslib.js";import i from"./load-plugins.js";import r from"./mixins/mixins.js";import{defineProp as n}from"./mixins/props.js";import{line as o}from"./mixins/geometry.js";import s from"./mixins/editable.js";import u from"./utils/equal.js";function a(t){return t||[]}var d=r(o,s).extend({name:"AmapBezierCurve",amapMeta:{initComponent:function(i,r){return t(this,void 0,void 0,(function(){return e(this,(function(t){return[2,new i.BezierCurve(r)]}))}))},editable:{events:["end","adjust","addnode","removenode"],loadEditor:function(){return t(this,void 0,void 0,(function(){return e(this,(function(t){switch(t.label){case 0:return[4,i("AMap.BezierCurveEditor")];case 1:return t.sent(),[2]}}))}))},initEditor:function(i,r,n,o){return t(this,void 0,void 0,(function(){return e(this,(function(t){return[2,new i.BezierCurveEditor(r,n,o)]}))}))},onEdit:function(t){var e=t.target.getPath();this.$emit("update:path",a(e))}}},props:{path:n({type:Array,setter:function(t,e){if(this.$props.editable||this.$props.editable){var i=a(t.getPath());if(u(i,e))return}t.setPath(e)},getter:function(t){return a(t.getPath())},clone:!0,equals:u,events:["dragging","dragend"]})}});export default d;
